# import email_validator for validate the inserted email

from email_validator import validate_email,EmailNotValidError


#Email silcer
def email_slicer(email):
    # get the username
    username = email[:email.index("@")]
    # get the domain name
    domain_name = email[email.index("@")+1:]
    return username, domain_name

def check(email):
    try:
        # Check that the email address is valid. Turn on check_deliverability
        # for first-time validations like on account creation pages (but not
        # login pages).
        v = validate_email(email, check_deliverability=False)
        # After this point, use only the normalized form of the email address,
        # especially before going to a database query.
        # email = v.normalized
        return True
    except EmailNotValidError as e:
        print(f"Email fromat error: {e}")

if __name__ == '__main__':
    email = input("Insert the email: ")
    email_v = check(email)
    while not email_v:
        email = input("Insert the email: ")
        email_v = check(email)
    username, domain_name = email_slicer(email)
    print(f"The user name is {username} and the domain name is {domain_name}.")


